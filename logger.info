<?xml version="1.0"?>
<!-- Generated by the OpenACS Package Manager -->

<package key="logger" url="http://openacs.org/repository/apm/packages/logger" type="apm_application">
    <package-name>Logger</package-name>
    <pretty-plural>Loggers</pretty-plural>
    <initial-install-p>f</initial-install-p>
    <singleton-p>f</singleton-p>
    
    <version name="2.3d1" url="http://openacs.org/repository/download/apm/logger-2.3d1.apm">
        <owner url="mailto:alexk@bread.com">Alex Kroman</owner>
        <owner url="mailto:peter@collaboraid.biz">Peter Marklund</owner>
        <owner url="mailto:lars@collaboraid.biz">Lars Pind</owner>
        <summary>Time and expenses reporting.</summary>
        <release-date>2005-10-14</release-date>
        <vendor url="http://www.collaboraid.biz">Collaboraid</vendor>
        <description format="text/html">Logger lets you keep track of measurements over time. The primary use case is time and expenses reporting, an area where we are being guided by the HR-XML Time Expense Reporting 2.0 standard. However, the intention is to allow for reporting of arbitrary types of numerical data such as financial results - account balance, revenue etc. You could even use this application to monitor your weight.  The full specification is here: &lt;a href=&quot;http://web.archive.org/web/20050223235915/http://www.collaboraid.biz:80/developer/logger-spec&quot;&gt;logger-spec&lt;/a&gt;

Logger can be optionally integrated with project-manager, for logging of time against projects and tasks.</description>
        <maturity>1</maturity>

        <provides url="logger" version="2.3d1"/>
        <requires url="acs-tcl" version="5.2.2"/>
        <requires url="categories" version="1.0d3"/>

        <callbacks>
            <callback type="after-install"  proc="logger::apm::after_install"/>
            <callback type="after-instantiate"  proc="logger::apm::after_instantiate"/>
            <callback type="after-upgrade"  proc="logger::apm::after_upgrade"/>
            <callback type="before-uninstall"  proc="logger::apm::before_uninstall"/>
            <callback type="before-uninstantiate"  proc="logger::apm::before_uninstantiate"/>
        </callbacks>
        <parameters>
            <parameter datatype="string"  min_n_values="1"  max_n_values="1"  name="DefaultDescriptionList"  description="A list of default descriptions separated by &quot;;&quot; to use when adding a log entry."/>
        </parameters>

    </version>
</package>
